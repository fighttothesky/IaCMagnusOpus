---
- name: Install gitea with sql database trough docker
  hosts: linux_machines
  become: true
  vars:
    # Default email that is needed for the certificates of your website
    default_email_ssl: fleurvanbuijten@live.be

    # Variables that are needed for gite and the mysql database
    mysql_root_password: uiopuiop
    mysql_user: gitea
    mysql_database: gitea
    mysql_password: uiopuiop
    virtual_host: school1.stuff.ovh # Domain name here
    letsencrypt_host: school1.stuff.ovh # Domain name here

  roles:
    - docker-role
  tasks:

  # Run ansible-playbook -K gitea.yaml to start this ansible script, -K to ask for the password

  # For Reverse Proxy
    - name: Add a docker network for the proxy
      community.docker.docker_network:
        name: nginx-proxy
      tags: "container"

    - name: Deploy Reverse Proxy
      community.docker.docker_container:
        restart_policy: on-failure
        image: nginxproxy/nginx-proxy
        name: rproxy
        networks:
          - name: nginx-proxy
        env:
          TRUST_DOWNSTREAM_PROXY: "false"
        volumes:
          - html:/usr/share/nginx/html
          - vhost.d:/etc/nginx/vhost.d
          - certs:/etc/nginx/certs:ro
          - /var/run/docker.sock:/tmp/docker.sock:ro
        ports:
          - '80:80'
          - '443:443'
      tags: "container"


    - name: Deploy SSL
      community.docker.docker_container:
        restart_policy: on-failure
        image: nginxproxy/acme-companion
        env:
          NGINX_PROXY_CONTAINER: rproxy
          DEFAULT_EMAIL: "{{ default_email_ssl }}"
        name: SSL
        networks:
          - name: nginx-proxy
        volumes:
          - html:/usr/share/nginx/html
          - vhost.d:/etc/nginx/vhost.d
          - certs:/etc/nginx/certs
          - acme:/etc/acme.sh
          - /var/run/docker.sock:/var/run/docker.sock:ro
      tags: "container"


  # For Gitea server
    - name: Deploy MySQL database
      community.docker.docker_container:
        name: MySQL
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
          MYSQL_USER: "{{ mysql_user }}"
          MYSQL_PASSWORD: "{{ mysql_password }}"
          MYSQL_DATABASE: "{{ mysql_database }}"
        volumes:
          - "./mysql:/var/lib/mysql"
        networks:
          - name: nginx-proxy
        restart_policy: on-failure
      tags: "container"

    - name: Deploy gitea server
      community.docker.docker_container:
        name: gitea
        image: gitea/gitea:1.19-nightly
        env:
          USER_UID: "1000"
          USER_GID: "1000"
          GITEA__database__DB_TYPE: mysql
          GITEA__database__HOST: "MySQL:3306"
          GITEA__database__NAME: "{{ mysql_database }}"
          GITEA__database__USER: "{{ mysql_user }}"
          GITEA__database__PASSWD: "{{ mysql_root_password }}"
          VIRTUAL_HOST: "{{ virtual_host }}"
          VIRTUAL_PORT: "3000"
          LETSENCRYPT_HOST: "{{ letsencrypt_host }}"
        networks:
          - name: nginx-proxy
        volumes:
          - "./gitea:/data"
          - "/etc/timezone:/etc/timezone:ro"
          - "/etc/localtime:/etc/localtime:ro"
        restart_policy: on-failure
      tags: "container"

  # firewall
    - name: Enable and start firewalld service
      ansible.builtin.service:
        name: firewalld
        state: started
        enabled: true

    - name: Allow HTTP (port 80/tcp) traffic
      ansible.posix.firewalld:
        port: 80/tcp
        permanent: true
        state: enabled

    - name: Allow HTTPS (port 443/tcp) traffic
      ansible.posix.firewalld:
        port: 443/tcp
        permanent: true
        state: enabled

    - name: Allow SSH traffic
      ansible.posix.firewalld:
        port: 22/tcp
        permanent: true
        state: enabled

    - name: Restart firewalld service
      ansible.builtin.service:
        name: firewalld
        state: restarted
